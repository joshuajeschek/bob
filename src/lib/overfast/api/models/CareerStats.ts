//@ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * OverFast API
 * OverFast API gives data about Overwatch 2 heroes, gamemodes, maps and players statistics by scraping Blizzard pages. Built with **FastAPI** and **Beautiful Soup**, and uses **nginx** as reverse proxy and **Redis** for caching. By using a Refresh-Ahead cache system, it minimizes calls to Blizzard pages (which can be very slow), and quickly returns accurate data to users.  In players statistics endpoints, several conversions are made for convenience : - all **duration values** are converted into **seconds** (integer) - **percent values** are exposed as **integers** instead of a string with a percent symbol - integer and float string representations are converted into the concerned type  Swagger UI (useful for trying API calls) : https://overfast-api.tekrop.fr/docs
 *
 * The version of the OpenAPI document: 2.17.2
 * Contact: vporchet@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HeroCareerStats } from './HeroCareerStats';
import { HeroCareerStatsFromJSON, HeroCareerStatsFromJSONTyped, HeroCareerStatsToJSON } from './HeroCareerStats';

/**
 * List of career statistics for every hero the player played : best statistics (most in game), combat (damage, kills, etc.), average (per 10 minutes), match awards (cards), hero specific, etc.)
 * @export
 * @interface CareerStats
 */
export interface CareerStats {
	/**
	 * Total of statistics for all heroes
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	allHeroes?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Ana
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	ana?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Ashe
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	ashe?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Baptiste
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	baptiste?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Bastion
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	bastion?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Brigitte
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	brigitte?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Cassidy
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	cassidy?: Array<HeroCareerStats>;
	/**
	 * Career statistics for D.Va
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	dva?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Doomfist
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	doomfist?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Echo
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	echo?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Genji
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	genji?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Hanzo
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	hanzo?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Junker Queen
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	junkerQueen?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Junkrat
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	junkrat?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Kiriko
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	kiriko?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Lifeweaver
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	lifeweaver?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Lúcio
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	lucio?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Mei
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	mei?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Mercy
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	mercy?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Moira
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	moira?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Orisa
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	orisa?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Pharah
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	pharah?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Ramattra
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	ramattra?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Reaper
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	reaper?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Reinhardt
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	reinhardt?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Roadhog
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	roadhog?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Sigma
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	sigma?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Sojourn
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	sojourn?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Soldier: 76
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	soldier76?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Sombra
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	sombra?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Symmetra
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	symmetra?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Torbjörn
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	torbjorn?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Tracer
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	tracer?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Widowmaker
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	widowmaker?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Winston
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	winston?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Wrecking Ball
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	wreckingBall?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Zarya
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	zarya?: Array<HeroCareerStats>;
	/**
	 * Career statistics for Zenyatta
	 * @type {Array<HeroCareerStats>}
	 * @memberof CareerStats
	 */
	zenyatta?: Array<HeroCareerStats>;
}

/**
 * Check if a given object implements the CareerStats interface.
 */
export function instanceOfCareerStats(value: object): boolean {
	let isInstance = true;

	return isInstance;
}

export function CareerStatsFromJSON(json: any): CareerStats {
	return CareerStatsFromJSONTyped(json, false);
}

export function CareerStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CareerStats {
	if (json === undefined || json === null) {
		return json;
	}
	return {
		allHeroes: !exists(json, 'all-heroes') ? undefined : (json['all-heroes'] as Array<any>).map(HeroCareerStatsFromJSON),
		ana: !exists(json, 'ana') ? undefined : (json['ana'] as Array<any>).map(HeroCareerStatsFromJSON),
		ashe: !exists(json, 'ashe') ? undefined : (json['ashe'] as Array<any>).map(HeroCareerStatsFromJSON),
		baptiste: !exists(json, 'baptiste') ? undefined : (json['baptiste'] as Array<any>).map(HeroCareerStatsFromJSON),
		bastion: !exists(json, 'bastion') ? undefined : (json['bastion'] as Array<any>).map(HeroCareerStatsFromJSON),
		brigitte: !exists(json, 'brigitte') ? undefined : (json['brigitte'] as Array<any>).map(HeroCareerStatsFromJSON),
		cassidy: !exists(json, 'cassidy') ? undefined : (json['cassidy'] as Array<any>).map(HeroCareerStatsFromJSON),
		dva: !exists(json, 'dva') ? undefined : (json['dva'] as Array<any>).map(HeroCareerStatsFromJSON),
		doomfist: !exists(json, 'doomfist') ? undefined : (json['doomfist'] as Array<any>).map(HeroCareerStatsFromJSON),
		echo: !exists(json, 'echo') ? undefined : (json['echo'] as Array<any>).map(HeroCareerStatsFromJSON),
		genji: !exists(json, 'genji') ? undefined : (json['genji'] as Array<any>).map(HeroCareerStatsFromJSON),
		hanzo: !exists(json, 'hanzo') ? undefined : (json['hanzo'] as Array<any>).map(HeroCareerStatsFromJSON),
		junkerQueen: !exists(json, 'junker-queen') ? undefined : (json['junker-queen'] as Array<any>).map(HeroCareerStatsFromJSON),
		junkrat: !exists(json, 'junkrat') ? undefined : (json['junkrat'] as Array<any>).map(HeroCareerStatsFromJSON),
		kiriko: !exists(json, 'kiriko') ? undefined : (json['kiriko'] as Array<any>).map(HeroCareerStatsFromJSON),
		lifeweaver: !exists(json, 'lifeweaver') ? undefined : (json['lifeweaver'] as Array<any>).map(HeroCareerStatsFromJSON),
		lucio: !exists(json, 'lucio') ? undefined : (json['lucio'] as Array<any>).map(HeroCareerStatsFromJSON),
		mei: !exists(json, 'mei') ? undefined : (json['mei'] as Array<any>).map(HeroCareerStatsFromJSON),
		mercy: !exists(json, 'mercy') ? undefined : (json['mercy'] as Array<any>).map(HeroCareerStatsFromJSON),
		moira: !exists(json, 'moira') ? undefined : (json['moira'] as Array<any>).map(HeroCareerStatsFromJSON),
		orisa: !exists(json, 'orisa') ? undefined : (json['orisa'] as Array<any>).map(HeroCareerStatsFromJSON),
		pharah: !exists(json, 'pharah') ? undefined : (json['pharah'] as Array<any>).map(HeroCareerStatsFromJSON),
		ramattra: !exists(json, 'ramattra') ? undefined : (json['ramattra'] as Array<any>).map(HeroCareerStatsFromJSON),
		reaper: !exists(json, 'reaper') ? undefined : (json['reaper'] as Array<any>).map(HeroCareerStatsFromJSON),
		reinhardt: !exists(json, 'reinhardt') ? undefined : (json['reinhardt'] as Array<any>).map(HeroCareerStatsFromJSON),
		roadhog: !exists(json, 'roadhog') ? undefined : (json['roadhog'] as Array<any>).map(HeroCareerStatsFromJSON),
		sigma: !exists(json, 'sigma') ? undefined : (json['sigma'] as Array<any>).map(HeroCareerStatsFromJSON),
		sojourn: !exists(json, 'sojourn') ? undefined : (json['sojourn'] as Array<any>).map(HeroCareerStatsFromJSON),
		soldier76: !exists(json, 'soldier-76') ? undefined : (json['soldier-76'] as Array<any>).map(HeroCareerStatsFromJSON),
		sombra: !exists(json, 'sombra') ? undefined : (json['sombra'] as Array<any>).map(HeroCareerStatsFromJSON),
		symmetra: !exists(json, 'symmetra') ? undefined : (json['symmetra'] as Array<any>).map(HeroCareerStatsFromJSON),
		torbjorn: !exists(json, 'torbjorn') ? undefined : (json['torbjorn'] as Array<any>).map(HeroCareerStatsFromJSON),
		tracer: !exists(json, 'tracer') ? undefined : (json['tracer'] as Array<any>).map(HeroCareerStatsFromJSON),
		widowmaker: !exists(json, 'widowmaker') ? undefined : (json['widowmaker'] as Array<any>).map(HeroCareerStatsFromJSON),
		winston: !exists(json, 'winston') ? undefined : (json['winston'] as Array<any>).map(HeroCareerStatsFromJSON),
		wreckingBall: !exists(json, 'wrecking-ball') ? undefined : (json['wrecking-ball'] as Array<any>).map(HeroCareerStatsFromJSON),
		zarya: !exists(json, 'zarya') ? undefined : (json['zarya'] as Array<any>).map(HeroCareerStatsFromJSON),
		zenyatta: !exists(json, 'zenyatta') ? undefined : (json['zenyatta'] as Array<any>).map(HeroCareerStatsFromJSON)
	};
}

export function CareerStatsToJSON(value?: CareerStats | null): any {
	if (value === undefined) {
		return undefined;
	}
	if (value === null) {
		return null;
	}
	return {
		'all-heroes': value.allHeroes === undefined ? undefined : (value.allHeroes as Array<any>).map(HeroCareerStatsToJSON),
		ana: value.ana === undefined ? undefined : (value.ana as Array<any>).map(HeroCareerStatsToJSON),
		ashe: value.ashe === undefined ? undefined : (value.ashe as Array<any>).map(HeroCareerStatsToJSON),
		baptiste: value.baptiste === undefined ? undefined : (value.baptiste as Array<any>).map(HeroCareerStatsToJSON),
		bastion: value.bastion === undefined ? undefined : (value.bastion as Array<any>).map(HeroCareerStatsToJSON),
		brigitte: value.brigitte === undefined ? undefined : (value.brigitte as Array<any>).map(HeroCareerStatsToJSON),
		cassidy: value.cassidy === undefined ? undefined : (value.cassidy as Array<any>).map(HeroCareerStatsToJSON),
		dva: value.dva === undefined ? undefined : (value.dva as Array<any>).map(HeroCareerStatsToJSON),
		doomfist: value.doomfist === undefined ? undefined : (value.doomfist as Array<any>).map(HeroCareerStatsToJSON),
		echo: value.echo === undefined ? undefined : (value.echo as Array<any>).map(HeroCareerStatsToJSON),
		genji: value.genji === undefined ? undefined : (value.genji as Array<any>).map(HeroCareerStatsToJSON),
		hanzo: value.hanzo === undefined ? undefined : (value.hanzo as Array<any>).map(HeroCareerStatsToJSON),
		'junker-queen': value.junkerQueen === undefined ? undefined : (value.junkerQueen as Array<any>).map(HeroCareerStatsToJSON),
		junkrat: value.junkrat === undefined ? undefined : (value.junkrat as Array<any>).map(HeroCareerStatsToJSON),
		kiriko: value.kiriko === undefined ? undefined : (value.kiriko as Array<any>).map(HeroCareerStatsToJSON),
		lifeweaver: value.lifeweaver === undefined ? undefined : (value.lifeweaver as Array<any>).map(HeroCareerStatsToJSON),
		lucio: value.lucio === undefined ? undefined : (value.lucio as Array<any>).map(HeroCareerStatsToJSON),
		mei: value.mei === undefined ? undefined : (value.mei as Array<any>).map(HeroCareerStatsToJSON),
		mercy: value.mercy === undefined ? undefined : (value.mercy as Array<any>).map(HeroCareerStatsToJSON),
		moira: value.moira === undefined ? undefined : (value.moira as Array<any>).map(HeroCareerStatsToJSON),
		orisa: value.orisa === undefined ? undefined : (value.orisa as Array<any>).map(HeroCareerStatsToJSON),
		pharah: value.pharah === undefined ? undefined : (value.pharah as Array<any>).map(HeroCareerStatsToJSON),
		ramattra: value.ramattra === undefined ? undefined : (value.ramattra as Array<any>).map(HeroCareerStatsToJSON),
		reaper: value.reaper === undefined ? undefined : (value.reaper as Array<any>).map(HeroCareerStatsToJSON),
		reinhardt: value.reinhardt === undefined ? undefined : (value.reinhardt as Array<any>).map(HeroCareerStatsToJSON),
		roadhog: value.roadhog === undefined ? undefined : (value.roadhog as Array<any>).map(HeroCareerStatsToJSON),
		sigma: value.sigma === undefined ? undefined : (value.sigma as Array<any>).map(HeroCareerStatsToJSON),
		sojourn: value.sojourn === undefined ? undefined : (value.sojourn as Array<any>).map(HeroCareerStatsToJSON),
		'soldier-76': value.soldier76 === undefined ? undefined : (value.soldier76 as Array<any>).map(HeroCareerStatsToJSON),
		sombra: value.sombra === undefined ? undefined : (value.sombra as Array<any>).map(HeroCareerStatsToJSON),
		symmetra: value.symmetra === undefined ? undefined : (value.symmetra as Array<any>).map(HeroCareerStatsToJSON),
		torbjorn: value.torbjorn === undefined ? undefined : (value.torbjorn as Array<any>).map(HeroCareerStatsToJSON),
		tracer: value.tracer === undefined ? undefined : (value.tracer as Array<any>).map(HeroCareerStatsToJSON),
		widowmaker: value.widowmaker === undefined ? undefined : (value.widowmaker as Array<any>).map(HeroCareerStatsToJSON),
		winston: value.winston === undefined ? undefined : (value.winston as Array<any>).map(HeroCareerStatsToJSON),
		'wrecking-ball': value.wreckingBall === undefined ? undefined : (value.wreckingBall as Array<any>).map(HeroCareerStatsToJSON),
		zarya: value.zarya === undefined ? undefined : (value.zarya as Array<any>).map(HeroCareerStatsToJSON),
		zenyatta: value.zenyatta === undefined ? undefined : (value.zenyatta as Array<any>).map(HeroCareerStatsToJSON)
	};
}
